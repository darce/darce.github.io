{"pageProps":{"metaData":{"index":10,"year":2021,"title":"Photoshelter.com: Accessibility & UI Prototyping","subtitle":"Enterprise SaaS Development","description":"Front-end and interface development","details":"Photoshelter is a cloud-based Digital Asset Management tool hosting 1B+ files for 80,000+ users, including universities and sports teams. I helped modernize its codebase for WCAG 2.1 compliance and prototyped new features.","links":[{"url":"http://www.photoshelter.com","label":"Photoshelter.com"}],"images":[{"src":"photoshelter-main-menu.png","alt":"Main Photoshelter Menu"}],"tags":["Front-end","React","Web-components","PolymerLit","OpenCV","Javascript","Accessibility"]},"mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    em: \"em\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    a: \"a\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Research and Development\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The primary goal of the R&D Department at Photoshelter was to explore and prototype features outside the existing production timeline, ensuring our products remained innovative and competitive.\\nWorking closely with the Chief Architect, we identified critical areas for improvement and innovation.\\nMy role was central in prototyping these new features using technologies including PolymerLit, React.js, and the Javascript implementation of OpenCV.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.em, {\n        children: \"Key Achievements:\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Workflow Automation Interface\"\n        }), \":\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"I prototyped this highly requested feature which accelerated the development of the \", _jsx(_components.strong, {\n        children: \"Smart Galleries\"\n      }), \" feature and laid the groundwork for its implementation.\\nThis prototype reduced production time by 30% compared to building the feature in the production environment, as it identified roadblocks to integrating it with the rest of the application.\\n\", _jsx(_components.a, {\n        href: \"https://support.photoshelterbrands.com/hc/en-us/articles/10657698741655-Smart-Galleries\",\n        children: \"See the documentation for the final feature\"\n      })]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Image Blur Comparison Tool\"\n        }), \":\\nI built this with the client-side implementation of OpenCV. Although this prototype ultimately did not make it into production, it served as an example of client-side image manipulation tools that do not require backend development time or server-side resources beyond static files.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Production Team Initiatives\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In addition to new feature development, another goal was to align our codebase with contemporary Accessibility standards.\\nMost Photoshelter customers are institutional clients (either universities or professional sports teams) and there was a concrete risk of running up against the \", _jsx(_components.a, {\n        href: \"https://www.ada.gov/law-and-regs/ada/\",\n        children: \"Americans with Disabilities Act (ADA.)\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.em, {\n        children: \"Key Achievements:\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Roadmap to achieve Accessibility\"\n          }), \":\\nAn initial code audit surfaced Accessibility violations that could be classified into two main camps: \\\"Low-hanging fruit,\\\" such as missing ARIA attributes and labels for forms and buttons, and more involved omissions, such as mouse-only navigation for all menus.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Implementing Keyboard Navigation\"\n          }), \":\\n\", _jsx(_components.img, {\n            src: \"images/photoshelter-keyboard-navigation.gif\",\n            alt: \"Keyboard navigation for main menu\"\n          }), _jsx(_components.em, {\n            children: \"Keyboard Navigation for main menu\"\n          })]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Before my time at Photoshelter, the mouse was the only way to navigate through the main menu. Using the keyboard to access features within the product is not only necessary for users with low mobility, but it also improves the productivity of abled users who prefer keyboard shortcuts.\\nImplementing keyboard navigation significantly reduced our Accessibility tech debt, moving the company closer to meeting WCAG standards.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Using accessibility tools such as the \", _jsx(_components.a, {\n        href: \"https://www.deque.com/axe/devtools/\",\n        children: \"Deque's axe DevTools Library\"\n      }), \", we conducted thorough audits of our codebase.\\nThese tools helped identify various issues, including non-compliant ARIA roles, missing labels, and problematic focus management.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Adding a layer of keyboard navigation presented unique challenges, primarily due to using the Shadow DOM with Polymer and Web Components.\\nShadow DOM's encapsulation can obscure elements from standard JavaScript event listeners, making it difficult to ensure consistent focus management and keyboard accessibility.\\nOvercoming this required a detailed understanding of both the accessibility requirements and the internals of the Shadow DOM.\\n\", _jsx(_components.img, {\n        src: \"images/photoshelter-empty-trash.gif\",\n        alt: \"The main menu seamlessly goes from mouse to keyboard control\"\n      }), _jsx(_components.em, {\n        children: \"The main menu seamlessly goes from mouse to keyboard control\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A custom solution was developed to bridge these gaps, allowing keyboard events to propagate correctly and ensuring all interactive elements were accessible via keyboard navigation.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"My efforts significantly reduced our accessibility tech debt, ensured compliance with WCAG 2.1 standards, and introduced the development culture to the habit of considering Accessibility before a feature is shipped.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}